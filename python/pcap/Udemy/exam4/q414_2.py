#!/usr/bin/python3
# What is the expected output of the following code snippet ?
my_list = sorted("Paris is a beautiful city".split(),key = lambda x: len(x), reverse= True)
print(my_list)

# Explanation:
# sorted() is a built-in function that builds a new sorted list from an iterable.
# sorted() can be used with one of these optional keyword arguments:
# - reverse : if set to True, sorting is done in a descending order - if set to False, sorting is done in ascending order.
# - key : this argument is a function which will be used on each value in the list 
# being sorted to determine the resulting order.
# split() is a string method that will split a string into a list based on a character 
# separator (default separator is any whitespace).
# In the above question, the key argument is used in the sorted() function, 
# with key = lambda x: len(x)  -> this is a lambda function that will be applied on each 
# element of the list generated by the split() method, which is this list :  ["Paris", "is", "a", "beautiful", "city"].
# The lambda function will return the length of each word in the list and the sorted() 
# function will then perform the sorting operation based on this criteria. 
# And because the reverse parameter is set to True, the sorting is done in a descending order - in other words :
# ['beautiful', 'Paris', 'city', 'is', 'a']